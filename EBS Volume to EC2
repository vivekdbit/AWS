# To format and mount an EBS volume on Linux

Step 1: Head over to EBS –> Volumes and create a new volume of your preferred size and type.

Step 2: Select the created volume, right-click and select the “attach volume” option.

Step 3: Select the instance from the instance text box

Step 4: Connect to your instance using SSH.

Step 5: Use the lsblk command to view your available disk devices and their mount points 
The following is example output for a T2 instance. The root device is /dev/xvda. The attached volume is /dev/xvdf, which is not yet mounted.
[ec2-user ~]$ lsblk
NAME    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
xvda    202:0    0    8G  0 disk
-xvda1  202:1    0    8G  0 part /
xvdf    202:80   0   10G  0 disk

Step 6: Determine whether there is a file system on the volume.
New volumes are raw block devices, and you must create a file system on them before you can mount and use them. Volumes that were created from snapshots likely have a file system on them already; if you create a new file system on top of an existing file system, the operation overwrites your data.
Use the file -s command to get information about a specific device, such as its file system type. If the output shows simply data, as in the following example output, there is no file system on the device

[ec2-user ~]$ sudo file -s /dev/xvdf
/dev/xvdf: data

Step 7: (Conditional) If you discovered that there is a file system on the device in the previous step, skip this step. If you have an empty volume, use the mkfs -t command to create a file system on the volume.
[ec2-user ~]$ sudo mkfs -t xfs /dev/xvdf

Step 8: Use the mkdir command to create a mount point directory for the volume. The mount point is where the volume is located in the file system tree and where you read and write files to after you mount the volume. The following example creates a directory named /data.
[ec2-user ~]$ sudo mkdir /data

Step 9: Use the following command to mount the volume at the directory you created in the previous step.
[ec2-user ~]$ sudo mount /dev/xvdf /data




